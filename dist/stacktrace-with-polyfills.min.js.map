{"version":3,"sources":["es6-promise.js","polyfills.js","stacktrace-gps.min.js","stack-generator.js","error-stack-parser.js","stacktrace.js"],"names":["$$utils$$objectOrFunction","x","$$utils$$isFunction","$$utils$$isMaybeThenable","$$utils$$F","$$asap$$useNextTick","process","nextTick","$$asap$$flush","$$asap$$useMutationObserver","iterations","observer","$$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","$$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","$$asap$$useSetTimeout","setTimeout","i","$$asap$$len","callback","$$asap$$queue","arg","undefined","$$$internal$$noop","$$$internal$$selfFullfillment","TypeError","$$$internal$$cannotReturnOwn","$$$internal$$getThen","promise","then","error","$$$internal$$GET_THEN_ERROR","$$$internal$$tryThen","value","fulfillmentHandler","rejectionHandler","call","e","$$$internal$$handleForeignThenable","thenable","$$asap$$default","sealed","$$$internal$$resolve","$$$internal$$fulfill","reason","$$$internal$$reject","_label","$$$internal$$handleOwnThenable","_state","$$$internal$$FULFILLED","_result","$$$internal$$REJECTED","$$$internal$$subscribe","$$$internal$$handleMaybeThenable","maybeThenable","constructor","$$$internal$$publishRejection","_onerror","$$$internal$$publish","$$$internal$$PENDING","_subscribers","length","parent","child","onFulfillment","onRejection","subscribers","settled","detail","$$$internal$$invokeCallback","$$$internal$$ErrorObject","this","$$$internal$$tryCatch","$$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","$$$internal$$initializePromise","resolver","$$$enumerator$$Enumerator","Constructor","input","abortOnReject","label","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","_enumerate","_validationError","$$es6$promise$promise$$needsResolver","$$es6$promise$promise$$needsNew","$$es6$promise$promise$$Promise","_id","$$es6$promise$promise$$counter","$$utils$$_isArray","Array","isArray","Object","prototype","toString","$$asap$$scheduleFlush","$$utils$$isArray","Date","now","getTime","create","o","arguments","Error","$$asap$$browserGlobal","window","MutationObserver","WebKitMutationObserver","$$asap$$isWorker","Uint8ClampedArray","importScripts","$$$enumerator$$default","_eachEntry","entry","c","_settledAt","_willSettleAt","resolve","_makeResult","state","enumerator","$$promise$all$$default","entries","$$promise$race$$default","$$promise$resolve$$default","object","$$promise$reject$$default","$$es6$promise$promise$$default","all","race","reject","result","catch","$$es6$promise$polyfill$$default","local","global","self","es6PromiseSupport","Promise","r","es6$promise$umd$$ES6Promise","polyfill","define","module","ES6Promise","Function","bind","oThis","aArgs","slice","fToBind","NoOp","fBound","apply","concat","map","thisArg","T","O","len","A","k","kValue","mappedValue","filter","t","res","val","push","forEach","root","factory","amd","exports","require","StackTraceGPS","SourceMap","StackFrame","_createXMLHTTPObject","xmlhttp","XMLHttpFactories","XMLHttpRequest","ActiveXObject","_xdr","url","errback","req","open","onerror","onreadystatechange","readyState","status","responseText","send","_findFunctionName","source","lineNumber","columnNumber","line","m","commentPos","reFunctionDeclaration","reFunctionExpression","reFunctionEvaluation","lines","split","code","maxLines","Math","min","indexOf","substr","exec","_ensureSupportedEnvironment","defineProperty","_ensureStackFrameIsLegit","stackframe","fileName","_findSourceMappingURL","_newLocationInfoFromSourceMap","rawSourceMap","args","loc","SourceMapConsumer","originalPositionFor","column","name","opts","sourceCache","_get","location","offline","pinpoint","getMappedLocation","findFunctionName","guessedFunctionName","StackGenerator","backtrace","stack","maxStackSize","curr","callee","test","RegExp","$1","caller","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","parse","stacktrace","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","locationParts","lastNumber","pop","possibleNumber","isNaN","parseFloat","isFinite","join","tokens","replace","functionName","shift","message","parseOpera9","parseOpera11","parseOpera10","lineRE","argsRaw","functionCall","StackTrace","_merge","first","second","target","obj","prop","hasOwnProperty","_isShapedLikeParsableError","err","_options","get","fromError","generateArtificially","stackframes","sf","resolveOriginal","_","stackFrames","instrument","fn","__stacktraceOriginalFn","instrumented","deinstrument"],"mappings":"CAQA,WACA,YAEA,SAAAA,GAAAC,GACA,MAAA,kBAAAA,IAAA,gBAAAA,IAAA,OAAAA,EAGA,QAAAC,GAAAD,GACA,MAAA,kBAAAA,GAGA,QAAAE,GAAAF,GACA,MAAA,gBAAAA,IAAA,OAAAA,EAeA,QAAAG,MAoCA,QAAAC,KACA,MAAA,YACAC,QAAAC,SAAAC,IAIA,QAAAC,KACA,GAAAC,GAAA,EACAC,EAAA,GAAAC,GAAAJ,GACAK,EAAAC,SAAAC,eAAA,GAGA,OAFAJ,GAAAK,QAAAH,GAAAI,eAAA,IAEA,WACAJ,EAAAK,KAAAR,IAAAA,EAAA,GAKA,QAAAS,KACA,GAAAC,GAAA,GAAAC,eAEA,OADAD,GAAAE,MAAAC,UAAAf,EACA,WACAY,EAAAI,MAAAC,YAAA,IAIA,QAAAC,KACA,MAAA,YACAC,WAAAnB,EAAA,IAMA,QAAAA,KACA,IAAA,GAAAoB,GAAA,EAAAC,EAAAD,EAAAA,GAAA,EAAA,CACA,GAAAE,GAAAC,EAAAH,GACAI,EAAAD,EAAAH,EAAA,EAEAE,GAAAE,GAEAD,EAAAH,GAAAK,OACAF,EAAAH,EAAA,GAAAK,OAGAJ,EAAA,EAgBA,QAAAK,MAMA,QAAAC,KACA,MAAA,IAAAC,WAAA,4CAGA,QAAAC,KACA,MAAA,IAAAD,WAAA,wDAGA,QAAAE,GAAAC,GACA,IACA,MAAAA,GAAAC,KACA,MAAAC,GAEA,MADAC,GAAAD,MAAAA,EACAC,GAIA,QAAAC,GAAAH,EAAAI,EAAAC,EAAAC,GACA,IACAN,EAAAO,KAAAH,EAAAC,EAAAC,GACA,MAAAE,GACA,MAAAA,IAIA,QAAAC,GAAAV,EAAAW,EAAAV,GACAW,EAAA,SAAAZ,GACA,GAAAa,IAAA,EACAX,EAAAE,EAAAH,EAAAU,EAAA,SAAAN,GACAQ,IACAA,GAAA,EACAF,IAAAN,EACAS,EAAAd,EAAAK,GAEAU,EAAAf,EAAAK,KAEA,SAAAW,GACAH,IACAA,GAAA,EAEAI,EAAAjB,EAAAgB,KACA,YAAAhB,EAAAkB,QAAA,sBAEAL,GAAAX,IACAW,GAAA,EACAI,EAAAjB,EAAAE,KAEAF,GAGA,QAAAmB,GAAAnB,EAAAW,GACAA,EAAAS,SAAAC,EACAN,EAAAf,EAAAW,EAAAW,SACAtB,EAAAoB,SAAAG,EACAN,EAAAjB,EAAAW,EAAAW,SAEAE,EAAAb,EAAAjB,OAAA,SAAAW,GACAS,EAAAd,EAAAK,IACA,SAAAW,GACAC,EAAAjB,EAAAgB,KAKA,QAAAS,GAAAzB,EAAA0B,GACA,GAAAA,EAAAC,cAAA3B,EAAA2B,YACAR,EAAAnB,EAAA0B,OACA,CACA,GAAAzB,GAAAF,EAAA2B,EAEAzB,KAAAE,EACAc,EAAAjB,EAAAG,EAAAD,OACAR,SAAAO,EACAc,EAAAf,EAAA0B,GACA/D,EAAAsC,GACAS,EAAAV,EAAA0B,EAAAzB,GAEAc,EAAAf,EAAA0B,IAKA,QAAAZ,GAAAd,EAAAK,GACAL,IAAAK,EACAY,EAAAjB,EAAAJ,KACAnC,EAAA4C,GACAoB,EAAAzB,EAAAK,GAEAU,EAAAf,EAAAK,GAIA,QAAAuB,GAAA5B,GACAA,EAAA6B,UACA7B,EAAA6B,SAAA7B,EAAAsB,SAGAQ,EAAA9B,GAGA,QAAAe,GAAAf,EAAAK,GACAL,EAAAoB,SAAAW,IAEA/B,EAAAsB,QAAAjB,EACAL,EAAAoB,OAAAC,EAEA,IAAArB,EAAAgC,aAAAC,QAEArB,EAAAkB,EAAA9B,IAIA,QAAAiB,GAAAjB,EAAAgB,GACAhB,EAAAoB,SAAAW,IACA/B,EAAAoB,OAAAG,EACAvB,EAAAsB,QAAAN,EAEAJ,EAAAgB,EAAA5B,IAGA,QAAAwB,GAAAU,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAAF,aACAC,EAAAK,EAAAL,MAEAC,GAAAL,SAAA,KAEAS,EAAAL,GAAAE,EACAG,EAAAL,EAAAZ,GAAAe,EACAE,EAAAL,EAAAV,GAAAc,EAEA,IAAAJ,GAAAC,EAAAd,QACAR,EAAAkB,EAAAI,GAIA,QAAAJ,GAAA9B,GACA,GAAAsC,GAAAtC,EAAAgC,aACAO,EAAAvC,EAAAoB,MAEA,IAAA,IAAAkB,EAAAL,OAAA,CAIA,IAAA,GAFAE,GAAA5C,EAAAiD,EAAAxC,EAAAsB,QAEAjC,EAAA,EAAAA,EAAAiD,EAAAL,OAAA5C,GAAA,EACA8C,EAAAG,EAAAjD,GACAE,EAAA+C,EAAAjD,EAAAkD,GAEAJ,EACAM,EAAAF,EAAAJ,EAAA5C,EAAAiD,GAEAjD,EAAAiD,EAIAxC,GAAAgC,aAAAC,OAAA,GAGA,QAAAS,KACAC,KAAAzC,MAAA,KAKA,QAAA0C,GAAArD,EAAAiD,GACA,IACA,MAAAjD,GAAAiD,GACA,MAAA/B,GAEA,MADAoC,GAAA3C,MAAAO,EACAoC,GAIA,QAAAJ,GAAAF,EAAAvC,EAAAT,EAAAiD,GACA,GACAnC,GAAAH,EAAA4C,EAAAC,EADAC,EAAArF,EAAA4B,EAGA,IAAAyD,GAWA,GAVA3C,EAAAuC,EAAArD,EAAAiD,GAEAnC,IAAAwC,GACAE,GAAA,EACA7C,EAAAG,EAAAH,MACAG,EAAA,MAEAyC,GAAA,EAGA9C,IAAAK,EAEA,WADAY,GAAAjB,EAAAF,SAKAO,GAAAmC,EACAM,GAAA,CAGA9C,GAAAoB,SAAAW,IAEAiB,GAAAF,EACAhC,EAAAd,EAAAK,GACA0C,EACA9B,EAAAjB,EAAAE,GACAqC,IAAAlB,EACAN,EAAAf,EAAAK,GACAkC,IAAAhB,GACAN,EAAAjB,EAAAK,IAIA,QAAA4C,GAAAjD,EAAAkD,GACA,IACAA,EAAA,SAAA7C,GACAS,EAAAd,EAAAK,IACA,SAAAW,GACAC,EAAAjB,EAAAgB,KAEA,MAAAP,GACAQ,EAAAjB,EAAAS,IAkBA,QAAA0C,GAAAC,EAAAC,EAAAC,EAAAC,GACAZ,KAAAa,qBAAAJ,EACAT,KAAA3C,QAAA,GAAAoD,GAAAzD,EAAA4D,GACAZ,KAAAc,eAAAH,EAEAX,KAAAe,eAAAL,IACAV,KAAAgB,OAAAN,EACAV,KAAAV,OAAAoB,EAAApB,OACAU,KAAAiB,WAAAP,EAAApB,OAEAU,KAAAkB,QAEA,IAAAlB,KAAAV,OACAlB,EAAA4B,KAAA3C,QAAA2C,KAAArB,UAEAqB,KAAAV,OAAAU,KAAAV,QAAA,EACAU,KAAAmB,aACA,IAAAnB,KAAAiB,YACA7C,EAAA4B,KAAA3C,QAAA2C,KAAArB,WAIAL,EAAA0B,KAAA3C,QAAA2C,KAAAoB,oBAkIA,QAAAC,KACA,KAAA,IAAAnE,WAAA,sFAGA,QAAAoE,KACA,KAAA,IAAApE,WAAA,yHA4GA,QAAAqE,GAAAhB,GACAP,KAAAwB,IAAAC,IACAzB,KAAAvB,OAAA1B,OACAiD,KAAArB,QAAA5B,OACAiD,KAAAX,gBAEArC,IAAAuD,IACAvF,EAAAuF,IACAc,IAGArB,eAAAuB,IACAD,IAGAhB,EAAAN,KAAAO,IAvnBA,GAAAmB,EAOAA,GALAC,MAAAC,QAKAD,MAAAC,QAJA,SAAA7G,GACA,MAAA,mBAAA8G,OAAAC,UAAAC,SAAAlE,KAAA9C,GAMA,IAsFAiH,GAtFAC,EAAAP,EAeA/E,GAdAuF,KAAAC,KAAA,WAAA,OAAA,GAAAD,OAAAE,WAGAP,OAAAQ,QAAA,SAAAC,GACA,GAAAC,UAAAjD,OAAA,EACA,KAAA,IAAAkD,OAAA,gCAEA,IAAA,gBAAAF,GACA,KAAA,IAAApF,WAAA,6BAGA,OADAhC,GAAA4G,UAAAQ,EACA,GAAApH,IAGA,GAEA+C,EAAA,SAAArB,EAAAE,GACAD,EAAAF,GAAAC,EACAC,EAAAF,EAAA,GAAAG,EACAH,GAAA,EACA,IAAAA,GAIAqF,KAIAS,EAAA,mBAAAC,QAAAA,UACAhH,EAAA+G,EAAAE,kBAAAF,EAAAG,uBAGAC,EAAA,mBAAAC,oBACA,mBAAAC,gBACA,mBAAA5G,gBAmCAU,EAAA,GAAA8E,OAAA,IAoBAK,GADA,mBAAA5G,UAAA,wBAAA2G,SAAAlE,KAAAzC,SACAD,IACAO,EACAH,IACAsH,EACA5G,IAEAO,GAIA,IAAA4C,GAAA,OACAV,EAAA,EACAE,EAAA,EACApB,EAAA,GAAAuC,GAmKAG,EAAA,GAAAH,EAqGAS,GAAAsB,UAAAf,eAAA,SAAAL,GACA,MAAAuB,GAAAvB,IAGAF,EAAAsB,UAAAV,iBAAA,WACA,MAAA,IAAAoB,OAAA,4CAGAhC,EAAAsB,UAAAZ,MAAA,WACAlB,KAAArB,QAAA,GAAAgD,OAAA3B,KAAAV,QAGA,IAAA0D,GAAAxC,CAEAA,GAAAsB,UAAAX,WAAA,WAKA,IAAA,GAJA7B,GAAAU,KAAAV,OACAjC,EAAA2C,KAAA3C,QACAqD,EAAAV,KAAAgB,OAEAtE,EAAA,EAAAW,EAAAoB,SAAAW,GAAAE,EAAA5C,EAAAA,IACAsD,KAAAiD,WAAAvC,EAAAhE,GAAAA,IAIA8D,EAAAsB,UAAAmB,WAAA,SAAAC,EAAAxG,GACA,GAAAyG,GAAAnD,KAAAa,oBACA5F,GAAAiI,GACAA,EAAAlE,cAAAmE,GAAAD,EAAAzE,SAAAW,GACA8D,EAAAhE,SAAA,KACAc,KAAAoD,WAAAF,EAAAzE,OAAA/B,EAAAwG,EAAAvE,UAEAqB,KAAAqD,cAAAF,EAAAG,QAAAJ,GAAAxG,IAGAsD,KAAAiB,aACAjB,KAAArB,QAAAjC,GAAAsD,KAAAuD,YAAA7E,EAAAhC,EAAAwG,KAIA1C,EAAAsB,UAAAsB,WAAA,SAAAI,EAAA9G,EAAAgB,GACA,GAAAL,GAAA2C,KAAA3C,OAEAA,GAAAoB,SAAAW,IACAY,KAAAiB,aAEAjB,KAAAc,gBAAA0C,IAAA5E,EACAN,EAAAjB,EAAAK,GAEAsC,KAAArB,QAAAjC,GAAAsD,KAAAuD,YAAAC,EAAA9G,EAAAgB,IAIA,IAAAsC,KAAAiB,YACA7C,EAAAf,EAAA2C,KAAArB,UAIA6B,EAAAsB,UAAAyB,YAAA,SAAAC,EAAA9G,EAAAgB,GACA,MAAAA,IAGA8C,EAAAsB,UAAAuB,cAAA,SAAAhG,EAAAX,GACA,GAAA+G,GAAAzD,IAEAnB,GAAAxB,EAAAN,OAAA,SAAAW,GACA+F,EAAAL,WAAA1E,EAAAhC,EAAAgB,IACA,SAAAW,GACAoF,EAAAL,WAAAxE,EAAAlC,EAAA2B,KAIA,IAAAqF,GAAA,SAAAC,EAAA/C,GACA,MAAA,IAAAoC,GAAAhD,KAAA2D,GAAA,EAAA/C,GAAAvD,SAGAuG,EAAA,SAAAD,EAAA/C,GAaA,QAAAnB,GAAA/B,GACAS,EAAAd,EAAAK,GAGA,QAAAgC,GAAArB,GACAC,EAAAjB,EAAAgB,GAhBA,GAAAoC,GAAAT,KAEA3C,EAAA,GAAAoD,GAAAzD,EAAA4D,EAEA,KAAAqB,EAAA0B,GAEA,MADArF,GAAAjB,EAAA,GAAAH,WAAA,oCACAG,CAaA,KAAA,GAVAiC,GAAAqE,EAAArE,OAUA5C,EAAA,EAAAW,EAAAoB,SAAAW,GAAAE,EAAA5C,EAAAA,IACAmC,EAAA4B,EAAA6C,QAAAK,EAAAjH,IAAAK,OAAA0C,EAAAC,EAGA,OAAArC,IAGAwG,EAAA,SAAAC,EAAAlD,GAEA,GAAAH,GAAAT,IAEA,IAAA8D,GAAA,gBAAAA,IAAAA,EAAA9E,cAAAyB,EACA,MAAAqD,EAGA,IAAAzG,GAAA,GAAAoD,GAAAzD,EAAA4D,EAEA,OADAzC,GAAAd,EAAAyG,GACAzG,GAGA0G,EAAA,SAAA1F,EAAAuC,GAEA,GAAAH,GAAAT,KACA3C,EAAA,GAAAoD,GAAAzD,EAAA4D,EAEA,OADAtC,GAAAjB,EAAAgB,GACAhB,GAGAoE,EAAA,EAUAuC,EAAAzC,CA4HAA,GAAA0C,IAAAP,EACAnC,EAAA2C,KAAAN,EACArC,EAAA+B,QAAAO,EACAtC,EAAA4C,OAAAJ,EAEAxC,EAAAO,WACA9C,YAAAuC,EAmMAjE,KAAA,SAAAmC,EAAAC,GACA,GAAAH,GAAAS,KACAwD,EAAAjE,EAAAd,MAEA,IAAA+E,IAAA9E,IAAAe,GAAA+D,IAAA5E,IAAAc,EACA,MAAAM,KAGA,IAAAR,GAAA,GAAAQ,MAAAhB,YAAAhC,GACAoH,EAAA7E,EAAAZ,OAEA,IAAA6E,EAAA,CACA,GAAA5G,GAAA2F,UAAAiB,EAAA,EACAvF,GAAA,WACA6B,EAAA0D,EAAAhE,EAAA5C,EAAAwH,SAGAvF,GAAAU,EAAAC,EAAAC,EAAAC,EAGA,OAAAF,IA8BA6E,QAAA,SAAA3E,GACA,MAAAM,MAAA1C,KAAA,KAAAoC,IAIA,IAAA4E,GAAA,WACA,GAAAC,EAGAA,GADA,mBAAAC,QACAA,OACA,mBAAA9B,SAAAA,OAAA9G,SACA8G,OAEA+B,IAGA,IAAAC,GACA,WAAAH,IAGA,WAAAA,GAAAI,SACA,UAAAJ,GAAAI,SACA,OAAAJ,GAAAI,SACA,QAAAJ,GAAAI,SAGA,WACA,GAAArB,EAEA,OADA,IAAAiB,GAAAI,QAAA,SAAAC,GAAAtB,EAAAsB,IACA5J,EAAAsI,KAGAoB,KACAH,EAAAI,QAAAX,IAIAa,GACAF,QAAAX,EACAc,SAAAR,EAIA,mBAAAS,SAAAA,OAAA,IACAA,OAAA,WAAA,MAAAF,KACA,mBAAAG,SAAAA,OAAA,QACAA,OAAA,QAAAH,EACA,mBAAA7E,QACAA,KAAA,WAAA6E,KAEAhH,KAAAmC,MC/7BA,mBAAA2E,UACAM,WAAAH,WAKAI,SAAApD,UAAAqD,OACAD,SAAApD,UAAAqD,KAAA,SAAAC,GACA,GAAA,kBAAApF,MACA,KAAA,IAAA9C,WAAA,uEAGA,IAAAmI,GAAA1D,MAAAG,UAAAwD,MAAAzH,KAAA0E,UAAA,GACAgD,EAAAvF,KACAwF,EAAA,aAEAC,EAAA,WACA,MAAAF,GAAAG,MAAA1F,eAAAwF,IAAAJ,EAAApF,KAAAoF,EACAC,EAAAM,OAAAhE,MAAAG,UAAAwD,MAAAzH,KAAA0E,aAMA,OAHAiD,GAAA1D,UAAA9B,KAAA8B,UACA2D,EAAA3D,UAAA,GAAA0D,GAEAC,IAMA9D,MAAAG,UAAA8D,MACAjE,MAAAG,UAAA8D,IAAA,SAAAhJ,EAAAiJ,GACA,GAAA,SAAA7F,MAAA,OAAAA,KACA,KAAA,IAAA9C,WAAA,8BAEA,IAEA4I,GAFAC,EAAAlE,OAAA7B,MACAgG,EAAAD,EAAAzG,SAAA,CAEA,IAAA,kBAAA1C,GACA,KAAA,IAAAM,WAAAN,EAAA,qBAEA2F,WAAAjD,OAAA,IACAwG,EAAAD,EAMA,KAHA,GAAAI,GAAA,GAAAtE,OAAAqE,GACAE,EAAA,EAEAF,EAAAE,GAAA,CACA,GAAAC,GAAAC,CACAF,KAAAH,KACAI,EAAAJ,EAAAG,GACAE,EAAAxJ,EAAAiB,KAAAiI,EAAAK,EAAAD,EAAAH,GACAE,EAAAC,GAAAE,GAEAF,IAGA,MAAAD,KAKAtE,MAAAG,UAAAuE,SACA1E,MAAAG,UAAAuE,OAAA,SAAAzJ,GACA,GAAA,SAAAoD,MAAA,OAAAA,KACA,KAAA,IAAA9C,WAAA,8BAGA,IAAAoJ,GAAAzE,OAAA7B,MACAgG,EAAAM,EAAAhH,SAAA,CACA,IAAA,kBAAA1C,GACA,KAAA,IAAAM,WAAAN,EAAA,qBAKA,KAAA,GAFA2J,MACAV,EAAAtD,UAAAjD,QAAA,EAAAiD,UAAA,GAAA,OACA7F,EAAA,EAAAsJ,EAAAtJ,EAAAA,IACA,GAAAA,IAAA4J,GAAA,CACA,GAAAE,GAAAF,EAAA5J,EACAE,GAAAiB,KAAAgI,EAAAW,EAAA9J,EAAA4J,IACAC,EAAAE,KAAAD,GAKA,MAAAD,KAKA5E,MAAAG,UAAA4E,UACA/E,MAAAG,UAAA4E,QAAA,SAAA9J,EAAAiJ,GACA,GAAAC,GAAAI,CACA,IAAA,OAAAlG,MAAAjD,SAAAiD,KACA,KAAA,IAAA9C,WAAA,+BAGA,IAAA6I,GAAAlE,OAAA7B,MACAgG,EAAAD,EAAAzG,SAAA,CACA,IAAA,kBAAA1C,GACA,KAAA,IAAAM,WAAAN,EAAA,qBAOA,KAJA2F,UAAAjD,OAAA,IACAwG,EAAAD,GAEAK,EAAA,EACAF,EAAAE,GAAA,CACA,GAAAC,EACAD,KAAAH,KACAI,EAAAJ,EAAAG,GACAtJ,EAAAiB,KAAAiI,EAAAK,EAAAD,EAAAH,IAEAG,OClHA,SAAAS,EAAAC,GAAA,YAAA,mBAAA7B,SAAAA,OAAA8B,IAAA9B,OAAA,kBAAA,aAAA,cAAA,cAAA6B,GAAA,gBAAAE,SAAA9B,OAAA8B,QAAAF,EAAAG,QAAA,iDAAAA,QAAA,eAAAA,QAAA,eAAAJ,EAAAK,cAAAJ,EAAAD,EAAAM,UAAAN,EAAA1B,WAAA0B,EAAAO,aAAAlH,KAAA,SAAAiH,EAAAhC,GAAA,YAAA,SAAAkC,KAAA,IAAA,GAAAC,GAAAC,GAAA,WAAA,MAAA,IAAAC,iBAAA,WAAA,MAAA,IAAAC,eAAA,uBAAA7K,EAAA,EAAAA,EAAA2K,EAAA/H,OAAA5C,IAAA,IAAA,MAAA0K,GAAAC,EAAA3K,KAAAyK,EAAAE,EAAA3K,GAAA0K,EAAA,MAAAtJ,KAAA,QAAA0J,GAAAC,EAAA7K,EAAA8K,GAAA,GAAAC,GAAAR,GAAAQ,GAAAC,KAAA,MAAAH,GAAAE,EAAAE,QAAAH,EAAAC,EAAAG,mBAAA,WAAA,GAAA,IAAAH,EAAAI,WAAA,CAAA,GAAAJ,EAAAK,QAAA,KAAAL,EAAAK,OAAA,IAAA,MAAApL,GAAA+K,EAAAM,aAAAP,GAAA,GAAAlF,OAAA,sBAAAiF,MAAAE,EAAAO,OAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,IAAA,GAAAC,GAAAC,EAAAC,EAAAC,EAAA,oCAAAC,EAAA,2DAAAC,EAAA,wEAAAC,EAAAT,EAAAU,MAAA,MAAAC,EAAA,GAAAC,EAAAC,KAAAC,IAAAb,EAAA,IAAA3L,EAAA,EAAAsM,EAAAtM,IAAAA,EAAA,GAAA6L,EAAAM,EAAAR,EAAA3L,EAAA,GAAA+L,EAAAF,EAAAY,QAAA,MAAAV,GAAA,IAAAF,EAAAA,EAAAa,OAAA,EAAAX,IAAAF,EAAA,CAAA,GAAAQ,EAAAR,EAAAQ,EAAAP,EAAAG,EAAAU,KAAAN,GAAAP,GAAAA,EAAA,GAAA,MAAAA,GAAA,EAAA,IAAAA,EAAAE,EAAAW,KAAAN,GAAAP,GAAAA,EAAA,GAAA,MAAAA,GAAA,EAAA,IAAAA,EAAAI,EAAAS,KAAAN,GAAAP,GAAAA,EAAA,GAAA,MAAAA,GAAA,GAAA,MAAAzL,QAAA,QAAAuM,KAAA,GAAA,kBAAAzH,QAAA0H,gBAAA,kBAAA1H,QAAAQ,OAAA,KAAA,IAAAG,OAAA,mDAAA,QAAAgH,GAAAC,GAAA,GAAA,gBAAAA,GAAA,KAAA,IAAAvM,WAAA,oCAAA,IAAA,gBAAAuM,GAAAC,SAAA,KAAA,IAAAxM,WAAA,kCAAA,IAAA,gBAAAuM,GAAApB,YAAAoB,EAAApB,WAAA,IAAA,GAAAoB,EAAApB,WAAA,EAAA,KAAA,IAAAnL,WAAA,+CAAA,IAAA,gBAAAuM,GAAAnB,cAAAmB,EAAAnB,aAAA,IAAA,GAAAmB,EAAAnB,aAAA,EAAA,KAAA,IAAApL,WAAA,qDAAA,QAAA,EAAA,QAAAyM,GAAAvB,GAAA,GAAAI,GAAA,yCAAAa,KAAAjB,EAAA,IAAAI,GAAAA,EAAA,GAAA,MAAAA,GAAA,EAAA,MAAA,IAAAhG,OAAA,8BAAA,QAAAoH,GAAAC,EAAAC,EAAAzB,EAAAC,GAAA,GAAAyB,GAAA,GAAA9C,GAAA+C,kBAAAH,GAAAI,qBAAA1B,KAAAF,EAAA6B,OAAA5B,GAAA,OAAA,IAAApB,YAAA6C,EAAAI,KAAAL,EAAAC,EAAA3B,OAAA2B,EAAAxB,KAAAwB,EAAAG,QAAAjF,EAAAH,UAAA,IAAAH,GAAAM,EAAAN,OAAA,OAAA,SAAAqC,GAAAoD,GAAA,MAAApK,gBAAAgH,IAAAoD,EAAAA,MAAApK,KAAAqK,YAAAD,EAAAC,gBAAArK,KAAAsK,KAAA,SAAAC,GAAA,MAAA,IAAA5F,GAAA,SAAArB,EAAAa,GAAAnE,KAAAqK,YAAAE,GAAAjH,EAAAtD,KAAAqK,YAAAE,IAAAH,EAAAI,QAAArG,EAAA,GAAA3B,OAAA,iDAAAgF,EAAA+C,EAAA,SAAAnC,GAAApI,KAAAqK,YAAAE,GAAAnC,EAAA9E,EAAA8E,IAAAjD,KAAAnF,MAAAmE,IAAAgB,KAAAnF,QAAAA,KAAAyK,SAAA,SAAAhB,GAAA,MAAAzJ,MAAA0K,kBAAAjB,GAAAnM,KAAA0C,KAAA2K,iBAAAxF,KAAAnF,QAAAA,KAAA2K,iBAAA,SAAAlB,GAAA,MAAA,IAAA9E,GAAA,SAAArB,EAAAa,GAAAqF,EAAAC,GAAAzJ,KAAAsK,KAAAb,EAAAC,UAAApM,KAAA,SAAA8K,GAAA,GAAAwC,GAAAzC,EAAAC,EAAAqB,EAAApB,WAAAoB,EAAAnB,aAAAhF,GAAA,GAAA4D,YAAA0D,EAAAnB,EAAAK,KAAAL,EAAAC,SAAAD,EAAApB,WAAAoB,EAAAnB,gBAAAnE,IAAAgB,KAAAnF,aAAAA,KAAA0K,kBAAA,SAAAjB,GAAA,MAAA,IAAA9E,GAAA,SAAArB,EAAAa,GAAAmF,IAAAE,EAAAC,GAAAzJ,KAAAsK,KAAAb,EAAAC,UAAApM,KAAA,SAAA8K,GAAApI,KAAAsK,KAAAX,EAAAvB,IAAA9K,KAAA,SAAAsI,GAAA,GAAAyC,GAAAoB,EAAApB,WAAAC,EAAAmB,EAAAnB,YAAAhF,GAAAsG,EAAAhE,EAAA6D,EAAAK,KAAAzB,EAAAC,KAAAnE,GAAA,SAAAA,IAAAgB,KAAAnF,MAAAmE,GAAA,SAAAA,IAAAgB,KAAAnF,UAAA,GAAAgH,GAAAoD,MCAA,SAAAzD,EAAAC,GACA,YAEA,mBAAA7B,SAAAA,OAAA8B,IACA9B,OAAA,mBAAA,cAAA6B,GACA,gBAAAE,SACA9B,OAAA8B,QAAAF,EAAAG,QAAA,eAEAJ,EAAAkE,eAAAjE,EAAAD,EAAAO,aAEAlH,KAAA,SAAAkH,GACA,OACA4D,UAAA,SAAAV,GACA,GAAAW,MACAC,EAAA,EAEA,iBAAAZ,IAAA,gBAAAA,GAAAY,eACAA,EAAAZ,EAAAY,aAIA,KADA,GAAAC,GAAA1I,UAAA2I,OACAD,GAAAF,EAAAzL,OAAA0L,GAAA,CACA,GAAAlB,MAAAxE,MAAAzH,KAAAoN,EAAA,UAEAF,GAAAtE,KADA,gCAAA0E,KAAAF,EAAAlJ,YACA,GAAAmF,GAAAkE,OAAAC,IAAAtO,OAAA+M,GAEA,GAAA5C,GAAAnK,OAAA+M,GAGA,KACAmB,EAAAA,EAAAK,OACA,MAAAxN,GACA,OAGA,MAAAiN,OCnCA,SAAApE,EAAAC,GACA,YAEA,mBAAA7B,SAAAA,OAAA8B,IACA9B,OAAA,sBAAA,cAAA6B,GACA,gBAAAE,SACA9B,OAAA8B,QAAAF,EAAAG,QAAA,eAEAJ,EAAA4E,iBAAA3E,EAAAD,EAAAO,aAEAlH,KAAA,SAAAkH,GACA,YAEA,IAAAsE,GAAA,WACAC,EAAA,QAEA,QAMAC,MAAA,SAAAnO,GACA,GAAA,mBAAAA,GAAAoO,YAAA,mBAAApO,GAAA,mBACA,MAAAyC,MAAA4L,WAAArO,EACA,IAAAA,EAAAwN,OAAAxN,EAAAwN,MAAAc,MAAAJ,GACA,MAAAzL,MAAA8L,YAAAvO,EACA,IAAAA,EAAAwN,OAAAxN,EAAAwN,MAAAc,MAAAL,GACA,MAAAxL,MAAA+L,gBAAAxO,EAEA,MAAA,IAAAiF,OAAA,oCASAwJ,gBAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAnD,MAAA,KACAqD,EAAAD,EAAAE,MACAC,EAAAH,EAAAA,EAAA5M,OAAA,EACA,KAAAgN,MAAAC,WAAAF,KAAAG,SAAAH,GAAA,CACA,GAAAhE,GAAA6D,EAAAE,KACA,QAAAF,EAAAO,KAAA,KAAApE,EAAA8D,GAEA,OAAAD,EAAAO,KAAA,KAAAN,EAAApP,SAIA+O,YAAA,SAAAvO,GACA,MAAAA,GAAAwN,MAAAjC,MAAA,MAAAxD,MAAA,GAAAM,IAAA,SAAA2C,GACA,GAAAmE,GAAAnE,EAAAoE,QAAA,OAAA,IAAA7D,MAAA,OAAAxD,MAAA,GACA4G,EAAAlM,KAAAgM,gBAAAU,EAAAN,MAAAO,QAAA,YAAA,KACAC,EAAAF,EAAA,IAAA,cAAAA,EAAA,GAAAA,EAAA,GAAA3P,MACA,OAAA,IAAAmK,GAAA0F,EAAA7P,OAAAmP,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAlM,OAGA+L,gBAAA,SAAAxO,GACA,MAAAA,GAAAwN,MAAAjC,MAAA,MAAAzC,OAAA,SAAAkC,GACA,QAAAA,EAAAsD,MAAAL,IACAxL,MAAA4F,IAAA,SAAA2C,GACA,GAAAmE,GAAAnE,EAAAO,MAAA,KACAoD,EAAAlM,KAAAgM,gBAAAU,EAAAN,OACAQ,EAAAF,EAAAG,SAAA9P,MACA,OAAA,IAAAmK,GAAA0F,EAAA7P,OAAAmP,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAlM,OAGA4L,WAAA,SAAA9N,GACA,OAAAA,EAAA6N,YAAA7N,EAAAgP,QAAA3D,QAAA,MAAA,IACArL,EAAAgP,QAAAhE,MAAA,MAAAxJ,OAAAxB,EAAA6N,WAAA7C,MAAA,MAAAxJ,OACAU,KAAA+M,YAAAjP,GACAA,EAAAiN,MAGA/K,KAAAgN,aAAAlP,GAFAkC,KAAAiN,aAAAnP,IAMAiP,YAAA,SAAAjP,GAKA,IAAA,GAJAoP,GAAA,oCACArE,EAAA/K,EAAAgP,QAAAhE,MAAA,MACA1E,KAEA1H,EAAA,EAAAsJ,EAAA6C,EAAAvJ,OAAA0G,EAAAtJ,EAAAA,GAAA,EAAA,CACA,GAAAmP,GAAAqB,EAAA7D,KAAAR,EAAAnM,GACAmP,IACAzH,EAAAqC,KAAA,GAAAS,GAAAnK,OAAAA,OAAA8O,EAAA,GAAAA,EAAA,KAIA,MAAAzH,IAGA6I,aAAA,SAAAnP,GAKA,IAAA,GAJAoP,GAAA,6DACArE,EAAA/K,EAAA6N,WAAA7C,MAAA,MACA1E,KAEA1H,EAAA,EAAAsJ,EAAA6C,EAAAvJ,OAAA0G,EAAAtJ,EAAAA,GAAA,EAAA,CACA,GAAAmP,GAAAqB,EAAA7D,KAAAR,EAAAnM,GACAmP,IACAzH,EAAAqC,KAAA,GAAAS,GAAA2E,EAAA,IAAA9O,OAAAA,OAAA8O,EAAA,GAAAA,EAAA,KAIA,MAAAzH,IAIA4I,aAAA,SAAAzP,GACA,MAAAA,GAAAwN,MAAAjC,MAAA,MAAAzC,OAAA,SAAAkC,GACA,QAAAA,EAAAsD,MAAAL,KACAjD,EAAAsD,MAAA,sBACA7L,MAAA4F,IAAA,SAAA2C,GACA,GAMA4E,GANAT,EAAAnE,EAAAO,MAAA,KACAoD,EAAAlM,KAAAgM,gBAAAU,EAAAN,OACAgB,EAAAV,EAAAG,SAAA,GACAD,EAAAQ,EACAT,QAAA,iCAAA,MACAA,QAAA,cAAA,KAAA5P,MAEAqQ,GAAAvB,MAAA,kBACAsB,EAAAC,EAAAT,QAAA,uBAAA,MAEA,IAAA7C,GAAA/M,SAAAoQ,GAAA,8BAAAA,EAAApQ,OAAAoQ,EAAArE,MAAA,IACA,OAAA,IAAA5B,GAAA0F,EAAA9C,EAAAoC,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAlM,UClIA,SAAA2G,EAAAC,GACA,YAIA,mBAAA7B,SAAAA,OAAA8B,IACA9B,OAAA,cAAA,qBAAA,kBAAA,kBAAA6B,GACA,gBAAAE,SACA9B,OAAA8B,QAAAF,EAAAG,QAAA,sBAAAA,QAAA,mBAAAA,QAAA,mBAEAJ,EAAA0G,WAAAzG,EAAAD,EAAA4E,iBAAA5E,EAAAkE,eAAAlE,EAAAK,gBAEAhH,KAAA,SAAAuL,EAAAV,EAAA7D,GAmBA,QAAAsG,GAAAC,EAAAC,GACA,GAAAC,KAWA,QATAF,EAAAC,GAAA9G,QAAA,SAAAgH,GACA,IAAA,GAAAC,KAAAD,GACAA,EAAAE,eAAAD,KACAF,EAAAE,GAAAD,EAAAC,GAGA,OAAAF,KAGAA,EAGA,QAAAI,GAAAC,GACA,MAAAA,GAAA/C,OAAA+C,EAAA,mBAlCA,GAAAC,IACA1H,OAAA,SAAAoD,GAEA,MAAA,MAAAA,EAAAmD,cAAA,IAAAzD,QAAA,iBACA,MAAAM,EAAAmD,cAAA,IAAAzD,QAAA,uBACA,MAAAM,EAAAmD,cAAA,IAAAzD,QAAA,oBACA,MAAAM,EAAAmD,cAAA,IAAAzD,QAAA,qBA+BA,QAMA6E,IAAA,SAAA5D,GACA,IAEA,KAAA,IAAA5H,OACA,MAAAsL,GACA,MAAAD,GAAAC,GACA9N,KAAAiO,UAAAH,EAAA1D,GAEApK,KAAAkO,qBAAA9D,KAWA6D,UAAA,SAAA1Q,EAAA6M,GAEA,MADAA,GAAAkD,EAAAS,EAAA3D,GACA,GAAAzF,SAAA,SAAArB,GACA,GAAA6K,GAAA5C,EAAAG,MAAAnO,EACA,mBAAA6M,GAAA/D,SACA8H,EAAAA,EAAA9H,OAAA+D,EAAA/D,SAEA/C,EAAAqB,QAAAV,IAAAkK,EAAAvI,IAAA,SAAAwI,GACA,MAAA,IAAAzJ,SAAA,SAAArB,GACA,QAAA+K,GAAAC,GACAhL,EAAA8K,GAGA,GAAApH,GAAAoD,GAAAK,SAAA2D,GACA9Q,KAAAgG,EAAA+K,GAAA,SAAAA,UAGAlJ,KAAAnF,QAQAkO,qBAAA,SAAA9D,GACAA,EAAAkD,EAAAS,EAAA3D,EACA,IAAAmE,GAAA1D,EAAAC,UAAAV,EAIA,OAHA,kBAAAA,GAAA/D,SACAkI,EAAAA,EAAAlI,OAAA+D,EAAA/D,SAEA1B,QAAArB,QAAAiL,IAYAC,WAAA,SAAAC,EAAA7R,EAAA8K,EAAA7B,GACA,GAAA,kBAAA4I,GACA,KAAA,IAAAjM,OAAA,wCACA,IAAA,kBAAAiM,GAAAC,uBAEA,MAAAD,EAGA,IAAAE,GAAA,WACA,IACA3O,KAAAgO,MAAA1Q,KAAAV,EAAA8K,GAAA,SAAAA,GACA+G,EAAA/I,MAAAG,GAAA7F,KAAAuC,WACA,MAAAzE,GAIA,KAHA+P,GAAA/P,IACAkC,KAAAiO,UAAAnQ,GAAAR,KAAAV,EAAA8K,GAAA,SAAAA,GAEA5J,IAEAqH,KAAAnF,KAGA,OAFA2O,GAAAD,uBAAAD,EAEAE,GASAC,aAAA,SAAAH,GACA,GAAA,kBAAAA,GACA,KAAA,IAAAjM,OAAA,2CACA,OAAA,kBAAAiM,GAAAC,uBACAD,EAAAC,uBAGAD","file":"stacktrace-with-polyfills.min.js","sourcesContent":["/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.0.1\n */\n\n(function() {\n    \"use strict\";\n\n    function $$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function $$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function $$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var $$utils$$_isArray;\n\n    if (!Array.isArray) {\n      $$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      $$utils$$_isArray = Array.isArray;\n    }\n\n    var $$utils$$isArray = $$utils$$_isArray;\n    var $$utils$$now = Date.now || function() { return new Date().getTime(); };\n    function $$utils$$F() { }\n\n    var $$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      $$utils$$F.prototype = o;\n      return new $$utils$$F();\n    });\n\n    var $$asap$$len = 0;\n\n    var $$asap$$default = function asap(callback, arg) {\n      $$asap$$queue[$$asap$$len] = callback;\n      $$asap$$queue[$$asap$$len + 1] = arg;\n      $$asap$$len += 2;\n      if ($$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        $$asap$$scheduleFlush();\n      }\n    };\n\n    var $$asap$$browserGlobal = (typeof window !== 'undefined') ? window : {};\n    var $$asap$$BrowserMutationObserver = $$asap$$browserGlobal.MutationObserver || $$asap$$browserGlobal.WebKitMutationObserver;\n\n    // test for web worker but not in IE10\n    var $$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function $$asap$$useNextTick() {\n      return function() {\n        process.nextTick($$asap$$flush);\n      };\n    }\n\n    function $$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new $$asap$$BrowserMutationObserver($$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function $$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = $$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function $$asap$$useSetTimeout() {\n      return function() {\n        setTimeout($$asap$$flush, 1);\n      };\n    }\n\n    var $$asap$$queue = new Array(1000);\n\n    function $$asap$$flush() {\n      for (var i = 0; i < $$asap$$len; i+=2) {\n        var callback = $$asap$$queue[i];\n        var arg = $$asap$$queue[i+1];\n\n        callback(arg);\n\n        $$asap$$queue[i] = undefined;\n        $$asap$$queue[i+1] = undefined;\n      }\n\n      $$asap$$len = 0;\n    }\n\n    var $$asap$$scheduleFlush;\n\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n      $$asap$$scheduleFlush = $$asap$$useNextTick();\n    } else if ($$asap$$BrowserMutationObserver) {\n      $$asap$$scheduleFlush = $$asap$$useMutationObserver();\n    } else if ($$asap$$isWorker) {\n      $$asap$$scheduleFlush = $$asap$$useMessageChannel();\n    } else {\n      $$asap$$scheduleFlush = $$asap$$useSetTimeout();\n    }\n\n    function $$$internal$$noop() {}\n    var $$$internal$$PENDING   = void 0;\n    var $$$internal$$FULFILLED = 1;\n    var $$$internal$$REJECTED  = 2;\n    var $$$internal$$GET_THEN_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function $$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.')\n    }\n\n    function $$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        $$$internal$$GET_THEN_ERROR.error = error;\n        return $$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function $$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function $$$internal$$handleForeignThenable(promise, thenable, then) {\n       $$asap$$default(function(promise) {\n        var sealed = false;\n        var error = $$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            $$$internal$$resolve(promise, value);\n          } else {\n            $$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          $$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          $$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function $$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, thenable._result);\n      } else if (promise._state === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, thenable._result);\n      } else {\n        $$$internal$$subscribe(thenable, undefined, function(value) {\n          $$$internal$$resolve(promise, value);\n        }, function(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function $$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        $$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = $$$internal$$getThen(maybeThenable);\n\n        if (then === $$$internal$$GET_THEN_ERROR) {\n          $$$internal$$reject(promise, $$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          $$$internal$$fulfill(promise, maybeThenable);\n        } else if ($$utils$$isFunction(then)) {\n          $$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          $$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function $$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        $$$internal$$reject(promise, $$$internal$$selfFullfillment());\n      } else if ($$utils$$objectOrFunction(value)) {\n        $$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        $$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function $$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      $$$internal$$publish(promise);\n    }\n\n    function $$$internal$$fulfill(promise, value) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = $$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n      } else {\n        $$asap$$default($$$internal$$publish, promise);\n      }\n    }\n\n    function $$$internal$$reject(promise, reason) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n      promise._state = $$$internal$$REJECTED;\n      promise._result = reason;\n\n      $$asap$$default($$$internal$$publishRejection, promise);\n    }\n\n    function $$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + $$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + $$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        $$asap$$default($$$internal$$publish, parent);\n      }\n    }\n\n    function $$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          $$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function $$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var $$$internal$$TRY_CATCH_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        $$$internal$$TRY_CATCH_ERROR.error = e;\n        return $$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function $$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = $$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = $$$internal$$tryCatch(callback, detail);\n\n        if (value === $$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          $$$internal$$reject(promise, $$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== $$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        $$$internal$$resolve(promise, value);\n      } else if (failed) {\n        $$$internal$$reject(promise, error);\n      } else if (settled === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, value);\n      } else if (settled === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, value);\n      }\n    }\n\n    function $$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          $$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        $$$internal$$reject(promise, e);\n      }\n    }\n\n    function $$$enumerator$$makeSettledResult(state, position, value) {\n      if (state === $$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n        return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function $$$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor($$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          $$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            $$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        $$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    $$$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return $$utils$$isArray(input);\n    };\n\n    $$$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    $$$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var $$$enumerator$$default = $$$enumerator$$Enumerator;\n\n    $$$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var promise = this.promise;\n      var input   = this._input;\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      if ($$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== $$$internal$$PENDING) {\n          entry._onerror = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else {\n          this._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult($$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === $$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === $$$internal$$REJECTED) {\n          $$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        $$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    $$$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      $$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt($$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt($$$internal$$REJECTED, i, reason);\n      });\n    };\n\n    var $$promise$all$$default = function all(entries, label) {\n      return new $$$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    };\n\n    var $$promise$race$$default = function race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor($$$internal$$noop, label);\n\n      if (!$$utils$$isArray(entries)) {\n        $$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        $$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        $$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        $$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    };\n\n    var $$promise$resolve$$default = function resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$resolve(promise, object);\n      return promise;\n    };\n\n    var $$promise$reject$$default = function reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$reject(promise, reason);\n      return promise;\n    };\n\n    var $$es6$promise$promise$$counter = 0;\n\n    function $$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function $$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var $$es6$promise$promise$$default = $$es6$promise$promise$$Promise;\n\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function $$es6$promise$promise$$Promise(resolver) {\n      this._id = $$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if ($$$internal$$noop !== resolver) {\n        if (!$$utils$$isFunction(resolver)) {\n          $$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof $$es6$promise$promise$$Promise)) {\n          $$es6$promise$promise$$needsNew();\n        }\n\n        $$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    $$es6$promise$promise$$Promise.all = $$promise$all$$default;\n    $$es6$promise$promise$$Promise.race = $$promise$race$$default;\n    $$es6$promise$promise$$Promise.resolve = $$promise$resolve$$default;\n    $$es6$promise$promise$$Promise.reject = $$promise$reject$$default;\n\n    $$es6$promise$promise$$Promise.prototype = {\n      constructor: $$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === $$$internal$$FULFILLED && !onFulfillment || state === $$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor($$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          $$asap$$default(function(){\n            $$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          $$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n\n    var $$es6$promise$polyfill$$default = function polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n        local = global;\n      } else if (typeof window !== 'undefined' && window.document) {\n        local = window;\n      } else {\n        local = self;\n      }\n\n      var es6PromiseSupport =\n        \"Promise\" in local &&\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        \"resolve\" in local.Promise &&\n        \"reject\" in local.Promise &&\n        \"all\" in local.Promise &&\n        \"race\" in local.Promise &&\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        (function() {\n          var resolve;\n          new local.Promise(function(r) { resolve = r; });\n          return $$utils$$isFunction(resolve);\n        }());\n\n      if (!es6PromiseSupport) {\n        local.Promise = $$es6$promise$promise$$default;\n      }\n    };\n\n    var es6$promise$umd$$ES6Promise = {\n      'Promise': $$es6$promise$promise$$default,\n      'polyfill': $$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = es6$promise$umd$$ES6Promise;\n    }\n}).call(this);","if (typeof Promise === 'undefined') {\n    ES6Promise.polyfill();\n}\n\n// ES5 Polyfills\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== 'function') {\n            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1);\n        var fToBind = this;\n        var NoOp = function () {\n        };\n        var fBound = function () {\n            return fToBind.apply(this instanceof NoOp && oThis ? this : oThis,\n                aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n        NoOp.prototype = this.prototype;\n        fBound.prototype = new NoOp();\n\n        return fBound;\n    };\n}\n\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\nif (!Array.prototype.map) {\n    Array.prototype.map = function(callback, thisArg) {\n        if (this === void 0 || this === null) {\n            throw new TypeError('this is null or not defined');\n        }\n        var O = Object(this);\n        var len = O.length >>> 0;\n        var T;\n        if (typeof callback !== 'function') {\n            throw new TypeError(callback + ' is not a function');\n        }\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        var A = new Array(len);\n        var k = 0;\n\n        while (k < len) {\n            var kValue, mappedValue;\n            if (k in O) {\n                kValue = O[k];\n                mappedValue = callback.call(T, kValue, k, O);\n                A[k] = mappedValue;\n            }\n            k++;\n        }\n\n        return A;\n    };\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(callback/*, thisArg*/) {\n        if (this === void 0 || this === null) {\n            throw new TypeError('this is null or not defined');\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof callback !== 'function') {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n                if (callback.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function(callback, thisArg) {\n        var T, k;\n        if (this === null || this === undefined) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n        if (typeof callback !== 'function') {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        k = 0;\n        while (k < len) {\n            var kValue;\n            if (k in O) {\n                kValue = O[k];\n                callback.call(T, kValue, k, O);\n            }\n            k++;\n        }\n    };\n}\n","(function(root,factory){\"use strict\";if(typeof define===\"function\"&&define.amd){define(\"stacktrace-gps\",[\"source-map\",\"es6-promise\",\"stackframe\"],factory)}else if(typeof exports===\"object\"){module.exports=factory(require(\"source-map/lib/source-map/source-map-consumer\"),require(\"es6-promise\"),require(\"stackframe\"))}else{root.StackTraceGPS=factory(root.SourceMap,root.ES6Promise,root.StackFrame)}})(this,function(SourceMap,ES6Promise){\"use strict\";ES6Promise.polyfill();var Promise=ES6Promise.Promise;function _createXMLHTTPObject(){var xmlhttp;var XMLHttpFactories=[function(){return new XMLHttpRequest},function(){return new ActiveXObject(\"Microsoft.XMLHTTP\")}];for(var i=0;i<XMLHttpFactories.length;i++){try{xmlhttp=XMLHttpFactories[i]();_createXMLHTTPObject=XMLHttpFactories[i];return xmlhttp}catch(e){}}}function _xdr(url,callback,errback){var req=_createXMLHTTPObject();req.open(\"get\",url);req.onerror=errback;req.onreadystatechange=function onreadystatechange(){if(req.readyState===4){if(req.status>=200&&req.status<400){return callback(req.responseText)}else{errback(new Error(\"Unable to retrieve \"+url))}}};req.send()}function _findFunctionName(source,lineNumber,columnNumber){var reFunctionDeclaration=/function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;var reFunctionExpression=/['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/;var reFunctionEvaluation=/['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;var lines=source.split(\"\\n\");var code=\"\",line,maxLines=Math.min(lineNumber,20),m,commentPos;for(var i=0;i<maxLines;++i){line=lines[lineNumber-i-1];commentPos=line.indexOf(\"//\");if(commentPos>=0){line=line.substr(0,commentPos)}if(line){code=line+code;m=reFunctionExpression.exec(code);if(m&&m[1]){return m[1]}m=reFunctionDeclaration.exec(code);if(m&&m[1]){return m[1]}m=reFunctionEvaluation.exec(code);if(m&&m[1]){return m[1]}}}return undefined}function _ensureSupportedEnvironment(){if(typeof Object.defineProperty!==\"function\"||typeof Object.create!==\"function\"){throw new Error(\"Unable to consume source maps in older browsers\")}}function _ensureStackFrameIsLegit(stackframe){if(typeof stackframe!==\"object\"){throw new TypeError(\"Given StackFrame is not an object\")}else if(typeof stackframe.fileName!==\"string\"){throw new TypeError(\"Given file name is not a String\")}else if(typeof stackframe.lineNumber!==\"number\"||stackframe.lineNumber%1!==0||stackframe.lineNumber<1){throw new TypeError(\"Given line number must be a positive integer\")}else if(typeof stackframe.columnNumber!==\"number\"||stackframe.columnNumber%1!==0||stackframe.columnNumber<0){throw new TypeError(\"Given column number must be a non-negative integer\")}return true}function _findSourceMappingURL(source){var m=/\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)$/.exec(source);if(m&&m[1]){return m[1]}else{throw new Error(\"sourceMappingURL not found\")}}function _newLocationInfoFromSourceMap(rawSourceMap,args,lineNumber,columnNumber){var loc=new SourceMap.SourceMapConsumer(rawSourceMap).originalPositionFor({line:lineNumber,column:columnNumber});return new StackFrame(loc.name,args,loc.source,loc.line,loc.column)}return function StackTraceGPS(opts){if(!(this instanceof StackTraceGPS)){return new StackTraceGPS(opts)}opts=opts||{};this.sourceCache=opts.sourceCache||{};this._get=function _get(location){return new Promise(function(resolve,reject){if(this.sourceCache[location]){resolve(this.sourceCache[location])}else if(opts.offline){reject(new Error(\"Cannot make network requests in offline mode\"))}else{_xdr(location,function(source){this.sourceCache[location]=source;resolve(source)}.bind(this),reject)}}.bind(this))};this.pinpoint=function StackTraceGPS$$pinpoint(stackframe){return this.getMappedLocation(stackframe).then(this.findFunctionName.bind(this))};this.findFunctionName=function StackTraceGPS$$findFunctionName(stackframe){return new Promise(function(resolve,reject){_ensureStackFrameIsLegit(stackframe);this._get(stackframe.fileName).then(function getSourceCallback(source){var guessedFunctionName=_findFunctionName(source,stackframe.lineNumber,stackframe.columnNumber);resolve(new StackFrame(guessedFunctionName,stackframe.args,stackframe.fileName,stackframe.lineNumber,stackframe.columnNumber))},reject)}.bind(this))};this.getMappedLocation=function StackTraceGPS$$getMappedLocation(stackframe){return new Promise(function(resolve,reject){_ensureSupportedEnvironment();_ensureStackFrameIsLegit(stackframe);this._get(stackframe.fileName).then(function(source){this._get(_findSourceMappingURL(source)).then(function(map){var lineNumber=stackframe.lineNumber;var columnNumber=stackframe.columnNumber;resolve(_newLocationInfoFromSourceMap(map,stackframe.args,lineNumber,columnNumber))},reject)[\"catch\"](reject)}.bind(this),reject)[\"catch\"](reject)}.bind(this))}}});\n//@ sourceMappingURL=stacktrace-gps.js.map","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function (StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                var args = [].slice.call(curr['arguments']);\n                if (/function(?:\\s+([\\w$]+))?\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame(RegExp.$1 || undefined, args));\n                } else {\n                    stack.push(new StackFrame(undefined, args));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /\\s+at /;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack && error.stack.match(FIREFOX_SAFARI_STACK_REGEXP)) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            var locationParts = urlLike.split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            return error.stack.split('\\n').slice(1).map(function (line) {\n                var tokens = line.replace(/^\\s+/, '').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop().replace(/[\\(\\)\\s]/g, ''));\n                var functionName = (!tokens[0] || tokens[0] === 'Anonymous') ? undefined : tokens[0];\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.shift() || undefined;\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        }\n    };\n}));\n\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\n    } else {\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\n    }\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\n    var _options = {\n        filter: function (stackframe) {\n            // Filter out stackframes for this library by default\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\n        }\n    };\n\n    /**\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\n     * Does not do deep merges.\n     * @param first Object\n     * @param second Object\n     * @returns new Object merged first and second\n     * @private\n     */\n    function _merge(first, second) {\n        var target = {};\n\n        [first, second].forEach(function (obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    target[prop] = obj[prop];\n                }\n            }\n            return target;\n        });\n\n        return target;\n    }\n\n    function _isShapedLikeParsableError(err) {\n        return err.stack || err['opera#sourceloc'];\n    }\n\n    return {\n        /**\n         * Get a backtrace from invocation point.\n         * @param opts Options Object\n         * @return Array[StackFrame]\n         */\n        get: function StackTrace$$get(opts) {\n            try {\n                // Error must be thrown to get stack in IE\n                throw new Error();\n            } catch (err) {\n                if (_isShapedLikeParsableError(err)) {\n                    return this.fromError(err, opts);\n                } else {\n                    return this.generateArtificially(opts);\n                }\n            }\n        },\n\n        /**\n         * Given an error object, parse it.\n         * @param error Error object\n         * @param opts Object for options\n         * @return Array[StackFrame]\n         */\n        fromError: function StackTrace$$fromError(error, opts) {\n            opts = _merge(_options, opts);\n            return new Promise(function (resolve) {\n                var stackframes = ErrorStackParser.parse(error);\n                if (typeof opts.filter === 'function') {\n                    stackframes = stackframes.filter(opts.filter);\n                }\n                resolve(Promise.all(stackframes.map(function (sf) {\n                    return new Promise(function (resolve) {\n                        function resolveOriginal(_) {\n                            resolve(sf);\n                        }\n\n                        new StackTraceGPS(opts).pinpoint(sf)\n                            .then(resolve, resolveOriginal)['catch'](resolveOriginal);\n                    });\n                })));\n            }.bind(this));\n        },\n\n        /**\n         * Use StackGenerator to generate a backtrace.\n         * @param opts Object options\n         * @returns Array[StackFrame]\n         */\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\n            opts = _merge(_options, opts);\n            var stackFrames = StackGenerator.backtrace(opts);\n            if (typeof opts.filter === 'function') {\n                stackFrames = stackFrames.filter(opts.filter);\n            }\n            return Promise.resolve(stackFrames);\n        },\n\n        /**\n         * Given a function, wrap it such that invocations trigger a callback that\n         * is called with a stack trace.\n         *\n         * @param {Function} fn to be instrumented\n         * @param {Function} callback function to call with a stack trace on invocation\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\n         * @param {Object} thisArg optional context object (e.g. window)\n         */\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                // Already instrumented, return given Function\n                return fn;\n            }\n\n            var instrumented = function StackTrace$$instrumented() {\n                try {\n                    this.get().then(callback, errback)['catch'](errback);\n                    fn.apply(thisArg || this, arguments);\n                } catch (e) {\n                    if (_isShapedLikeParsableError(e)) {\n                        this.fromError(e).then(callback, errback)['catch'](errback);\n                    }\n                    throw e;\n                }\n            }.bind(this);\n            instrumented.__stacktraceOriginalFn = fn;\n\n            return instrumented;\n        },\n\n        /**\n         * Given a function that has been instrumented,\n         * revert the function to it's original (non-instrumented) state.\n         *\n         * @param fn {Function}\n         */\n        deinstrument: function StackTrace$$deinstrument(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot de-instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                return fn.__stacktraceOriginalFn;\n            } else {\n                // Function not instrumented, return original\n                return fn;\n            }\n        }\n    };\n}));\n"],"sourceRoot":"/source/"}